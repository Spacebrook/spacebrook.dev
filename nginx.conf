worker_processes     1;
worker_rlimit_nofile 32768;
pid                  nginx.pid;
daemon               off;
user                 root root;

events {
    multi_accept        on;
    worker_connections  8192;
    use                 epoll;
}

http {
    include                       /etc/nginx/mime.types;
    default_type                  application/octet-stream;
    keepalive_requests            100;
    keepalive_timeout             10s;
    client_max_body_size          2m;
    client_body_temp_path         /tmp/nginx_client_body_temp_path;
    proxy_temp_path               /tmp/nginx_proxy_temp_path;
    fastcgi_temp_path             /tmp/nginx_fastcgi_temp_path;
    sendfile                      on;
    gzip                          on;
    gzip_vary                     on;
    gzip_proxied                  any;
    gzip_types                    text/css
                                  application/javascript
                                  application/json;
    charset                       utf-8;
    server_names_hash_bucket_size 128;
    proxy_intercept_errors        on;
    tcp_nopush                    on;
    tcp_nodelay                   on;

    log_format main '{'
        '"remote_addr": "$remote_addr",'
        '"remote_user": "$remote_user",'
        '"server_name": "$server_name",'
        '"server_port": "$server_port",'
        '"host": "$host",'
        '"time_local": "$time_local",'
        '"request_time": $request_time,'
        '"request": "$request",'
        '"status": $status,'
        '"body_bytes_sent": $body_bytes_sent,'
        '"http_referer": "$http_referer",'
        '"http_user_agent": "$http_user_agent",'
        '"http_x_forwarded_for": "$http_x_forwarded_for",'
        '"request_uri": "$request_uri",'
        '"uri": "$uri",'
        '"args": "$args",'
        '"event_name": "NGINX_LOG"'
    '}';

    access_log /dev/stdout main;
    error_log  /dev/stderr;

    # Set HSTS header based on hostname.
    map $hostname $hsts_header {
        # Disable HSTS for dev.
        spacebrook-local "";

        # Enable HSTS everywhere else.
        default "max-age=63072000; includeSubdomains; preload";
    }

    server {
        listen 80;
        listen 443 ssl http2;
        server_name spacebrook 127.0.0.1;

        ssl_certificate           /etc/letsencrypt/live/spacebrook.dev/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/spacebrook.dev/privkey.pem;
        ssl_dhparam               /etc/letsencrypt/live/spacebrook.dev/dhparam.pem;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve            secp384r1;
        ssl_session_cache         shared:SSL:10m;
        ssl_session_tickets       off;
        ssl_stapling_verify       on;

        add_header Strict-Transport-Security $hsts_header;

        add_header X-Content-Type-Options nosniff;

        proxy_set_header Host $host;

        if ($scheme = http) {
            set $redirect_to_https true;
        }

        if ($hostname = spacebrook-local) {
            set $redirect_to_https false;
        }

        if ($redirect_to_https = true) {
            rewrite ^(.*) https://$host$1;
        }

        location ~ /.well-known {
            root /app/www;
        }

        location / {
            if ($hostname != spacebrook-local) {
                add_header Cache-Control 'public, max-age=31536000';
            }

            root /public;
        }
    }
}
